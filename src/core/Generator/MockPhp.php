<?php

namespace SPF\Generator;

class MockPhp
{
    /**
     * 随机字符串
     *
     * @param string|integer $rule 规则：数字-指定长度字符串；1-2-1~2范围长度；默认-随机长度
     * @param string $dict 字典
     *
     * @return string
     */
    public static function string($rule = null, $dict = null)
    {
        $dict = $dict ?: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';

        $string = '';

        if (false !== strpos($rule, '-')) {
            list($min, $max) = explode('-', $rule);
            $max = $max > strlen($dict) ? strlen($dict) - 1 : $max;

            return substr(str_shuffle($dict), 0, mt_rand($min, $max));
        }

        // 随机生成长度
        if (is_null($rule)) {
            $rule = mt_rand(0, 100);
        }

        for ($i = 0; $i < $rule; $i++) {
            $string .= $dict[mt_rand(0, strlen($dict) - 1)];
        }

        return $string;
    }

    /**
     * 随机数字
     *
     * @param string|integer $rule 规则：数字-指定长度字符串；1-2-1~2范围大小；默认-1~10为随机数字
     *
     * @return int|string
     */
    public static function number($rule = null)
    {
        if (false !== strpos($rule, '-')) {
            list($min, $max) = explode('-', $rule);

            return mt_rand($min, $max);
        }

        if (is_null($rule)) {
            $rule = mt_rand(1, 10);
        }

        return mt_rand(0, str_repeat(9, $rule));
    }

    /**
     * 随机英文字符
     *
     * @param string $rule 规则：数字-指定长度字符串；1-2-1~2范围长度；默认-随机长度
     *
     * @return string
     */
    public static function en($rule = null)
    {
        $chars  = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';

        return static::string($rule, $chars);
    }

    /**
     * 随机中文名
     *
     * @param string $rule 规则：数字-指定长度姓名；1-2-1~2范围长度；默认-随机长度2~3（复姓会+1）
     *
     * @return string
     */
    public static function cnName($rule = null)
    {
        $xing_data = [
            '赵', '钱', '孙', '李', '周', '吴', '郑', '王', '冯', '陈', '褚', '卫', '蒋', '沈', '韩', '杨', '朱', '秦',
            '尤', '许', '何', '吕', '施', '张', '孔', '曹', '严', '华', '金', '魏', '陶', '姜', '戚', '谢', '邹', '喻',
            '柏', '水', '窦', '章', '云', '苏', '潘', '葛', '奚', '范', '彭', '郎', '鲁', '韦', '昌', '马', '苗', '凤',
            '花', '方', '任', '袁', '柳', '鲍', '史', '唐', '费', '薛', '雷', '贺', '倪', '汤', '滕', '殷', '罗', '毕',
            '郝', '安', '常', '傅', '卞', '齐', '元', '顾', '孟', '平', '黄', '穆', '萧', '尹', '姚', '邵', '湛', '汪',
            '祁', '毛', '狄', '米', '伏', '成', '戴', '谈', '宋', '茅', '庞', '熊', '纪', '舒', '屈', '项', '祝', '董',
            '梁', '杜', '阮', '蓝', '闵', '季', '贾', '路', '娄', '江', '童', '颜', '郭', '梅', '盛', '林', '钟', '徐',
            '邱', '骆', '高', '夏', '蔡', '田', '樊', '胡', '凌', '霍', '虞', '万', '支', '柯', '管', '卢', '莫', '柯',
            '房', '裘', '缪', '解', '应', '宗', '丁', '宣', '邓', '单', '杭', '洪', '包', '诸', '左', '石', '崔', '吉',
            '龚', '程', '嵇', '邢', '裴', '陆', '荣', '翁', '荀', '于', '惠', '甄', '曲', '封', '储', '仲', '伊', '宁',
            '仇', '甘', '武', '符', '刘', '景', '詹', '龙', '叶', '幸', '司', '黎', '溥', '印', '怀', '蒲', '邰', '从',
            '索', '赖', '卓', '屠', '池', '乔', '胥', '闻', '莘', '党', '翟', '谭', '贡', '劳', '逄', '姬', '申', '扶',
            '堵', '冉', '宰', '雍', '桑', '寿', '通', '燕', '浦', '尚', '农', '温', '别', '庄', '晏', '柴', '瞿', '阎',
            '连', '习', '容', '向', '古', '易', '廖', '庾', '终', '步', '都', '耿', '满', '弘', '匡', '国', '文', '寇',
            '广', '禄', '阙', '东', '欧', '利', '师', '巩', '聂', '关', '荆', '司马', '上官', '欧阳', '夏侯', '诸葛',
            '闻人', '东方', '赫连', '皇甫', '尉迟', '公羊', '澹台', '公冶', '淳于', '单于', '太叔', '申屠', '公孙',
            '仲孙', '轩辕', '令狐', '徐离', '宇文', '长孙', '慕容', '司徒', '司空', '勾'
        ];
        $ming_data = [
            '伟', '刚', '勇', '毅', '俊', '峰', '强', '军', '平', '保', '东', '文', '辉', '力', '明', '永', '健', '世',
            '广', '志', '义', '兴', '良', '海', '山', '仁', '波', '宁', '贵', '福', '生', '龙', '元', '全', '国', '胜',
            '学', '祥', '才', '发', '武', '新', '利', '清', '飞', '彬', '富', '顺', '信', '子', '杰', '涛', '昌', '成',
            '康', '星', '光', '天', '达', '安', '岩', '中', '茂', '进', '林', '有', '坚', '和', '彪', '博', '诚', '先',
            '敬', '震', '振', '壮', '会', '思', '群', '豪', '心', '邦', '承', '乐', '绍', '功', '松', '善', '厚', '庆',
            '磊', '民', '友', '裕', '河', '哲', '江', '超', '浩', '亮', '政', '谦', '亨', '奇', '固', '之', '轮', '翰',
            '朗', '伯', '宏', '言', '若', '鸣', '朋', '斌', '梁', '栋', '维', '启', '克', '伦', '翔', '旭', '鹏', '泽',
            '晨', '辰', '士', '以', '建', '家', '致', '树', '炎', '德', '行', '时', '泰', '盛', '雄', '琛', '钧', '冠',
            '策', '腾', '楠', '榕', '风', '航', '弘', '秀', '娟', '英', '华', '慧', '巧', '美', '娜', '静', '淑', '惠',
            '珠', '翠', '雅', '芝', '玉', '萍', '红', '娥', '玲', '芬', '芳', '燕', '彩', '春', '菊', '兰', '凤', '洁',
            '梅', '琳', '素', '云', '莲', '真', '环', '雪', '荣', '爱', '妹', '霞', '香', '月', '莺', '媛', '艳', '瑞',
            '凡', '佳', '嘉', '琼', '勤', '珍', '贞', '莉', '桂', '娣', '叶', '璧', '璐', '娅', '琦', '晶', '妍', '茜',
            '秋', '珊', '莎', '锦', '黛', '青', '倩', '婷', '姣', '婉', '娴', '瑾', '颖', '露', '瑶', '怡', '婵', '雁',
            '蓓', '纨', '仪', '荷', '丹', '蓉', '眉', '君', '琴', '蕊', '薇', '菁', '梦', '岚', '苑', '婕', '馨', '瑗',
            '琰', '韵', '融', '园', '艺', '咏', '卿', '聪', '澜', '纯', '毓', '悦', '昭', '冰', '爽', '琬', '茗', '羽',
            '希', '欣', '飘', '育', '滢', '馥', '筠', '柔', '竹', '霭', '凝', '晓', '欢', '霄', '枫', '芸', '菲', '寒',
            '伊', '亚', '宜', '可', '姬', '舒', '影', '荔', '枝', '丽', '阳', '妮', '宝', '贝', '初', '程', '梵', '罡',
            '恒', '鸿', '桦', '骅', '剑', '娇', '纪', '宽', '苛', '灵', '玛', '媚', '琪', '晴', '容', '睿', '烁', '堂',
            '唯', '威', '韦', '雯', '苇', '萱', '阅', '彦', '宇', '雨', '洋', '忠', '宗', '曼', '紫', '逸', '贤', '蝶',
            '菡', '绿', '蓝', '儿', '翠', '烟'
        ];

        $name = $xing_data[mt_rand(0, count($xing_data))];
        if (false !== strpos($rule, '-')) {
            list($min, $max) = explode('-', $rule);
            $end = mt_rand($min, $max) - 1;
        } elseif (is_null($rule)) {
            $end = mt_rand(0, 1);
        } else {
            $end = $rule - 1;
        }

        foreach (range(0, $end) as $r) {
            $name .= $ming_data[mt_rand(0, count($ming_data) - 1)];
        }

        return $name;
    }

    /**
     * 随机浮点型
     *
     * @param string|integer $rule 整数位，规则：数字-指定长度字符串；1-2-1~2范围大小；默认-1~10为随机数字
     * @param string|integer $decimal 小数位，规则：数字-指定长度字符串；1-2-1~2范围大小；默认-1~10为随机数字
     *
     * @return float
     */
    public static function float($rule = null, $decimal = 3)
    {
        $integer = static::number($rule);
        $float   = static::number($decimal);

        return floatval($integer . '.' . $float);
    }

    /**
     * 随机布尔值
     *
     * @param string|integer $rule 规则：指定值被转为boolean类型，未指定随机生成
     *
     * @return boolean
     */
    public static function boolean($rule = null)
    {
        if (is_null($rule)) {
            return (bool) mt_rand(0, 1);
        }

        return !!$rule;
    }

    /**
     * 随机日期时间
     *
     * @param string $format
     *
     * @return string
     */
    public static function date($format = 'Y-m-d H:i:s')
    {
        return date($format, mt_rand(0, pow(2, 31) - 1));
    }

    /**
     * 随机网址
     *
     * @param string $protocol
     * @param string $domain
     * @param string $suffix
     *
     * @return string
     */
    public static function url($protocol = null, $domain = null, $suffix = null)
    {
        if (!$protocol) {
            $data = ['http', 'https'];
            $protocol = $data[array_rand($data, 1)];
        }

        if (!$domain) {
            $data = ['www.baidu.com', 'www.qq.com', 'www.taobao.com', 'www.csdn.net', 'www.gouguoyin.cn'];
            $domain  = $data[array_rand($data, 1)];
        }

        if (!$suffix) {
            $data = ['html', 'htm', 'json', 'py', 'jsp', 'asp'];
            $suffix = $data[array_rand($data, 1)];
        }

        return $protocol . '://' . $domain . '/' . static::string('4-8') . '.' . $suffix;
    }

    /**
     * 随机邮箱
     *
     * @return string
     */
    public static function email()
    {
        $data = [
            '@qq.com', '@163.com', '@126.com', '@sina.com.cn', '@139.com', '@hotmail.com', '@gmail.com', '@yahoo.com'
        ];

        $domain = $data[mt_rand(0, count($data) - 1)];

        if ($domain == '@qq.com') {
            return static::number('10000-1000000000') . $domain;
        }

        return static::string(6) . $domain;
    }

    /**
     * 随机手机号
     *
     * @return string
     */
    public static function mobile()
    {
        $data = [
            130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
        ];

        $prefix = $data[mt_rand(0, count($data) - 1)];

        return $prefix . sprintf('%08d', mt_rand(0, 99999999));
    }

    /**
     * 随机银行
     *
     * @param string $format
     *
     * @return string
     */
    public static function bank($format = 'title')
    {
        $data = [
            'ICBC' => '中国工商银行',
            'CCB' => '中国建设银行',
            'ABC' => '中国农业银行',
            'CMBC' => '中国民生银行',
            'CEB' => '中国光大银行',
            'BOC' => '中国银行',
            'CMB' => '招商银行',
            'BCM' => '交通银行',
            'CIB' => '兴业银行',
            'GDB' => '广东发展银行',
        ];

        $key = array_rand($data, 1);

        return $format == 'title' ? $data[$key] : $key;
    }

    /**
     * 随机国家
     *
     * @param string $format
     *
     * @return string
     */
    public static function country($format = 'title')
    {
        $data = [
            'CHN' => '中国',
            'USA' => '美国',
            'UK' => '英国',
            'FRA' => '法国',
            'RUS' => '俄罗斯',
            'JPN' => '日本',
            'GER' => '德国',
            'KOR' => '韩国',
            'IND' => '印度',
            'ITA' => '意大利',
            'CAN' => '加拿大',
        ];

        $key = array_rand($data, 1);

        return $format == 'title' ? $data[$key] : $key;
    }

    /**
     * 随机区域
     *
     * @return string
     */
    public static function region()
    {
        $data = ['华东', '华南', '华中', '华北', '西北', '西南', '东北', '港澳台'];

        $key = array_rand($data, 1);

        return $data[$key];
    }

    /**
     * 随机省份
     *
     * @param string $format
     *
     * @return integer|string
     */
    public static function province($format = 'title')
    {
        $data = [
            '110000' => '北京市',
            '120000' => '天津市',
            '130000' => '河北省',
            '140000' => '山西省',
            '150000' => '内蒙古自治区',
            '210000' => '辽宁省',
            '220000' => '吉林省',
            '230000' => '黑龙江省',
            '310000' => '上海市',
            '320000' => '江苏省',
            '330000' => '浙江省',
            '340000' => '安徽省',
            '350000' => '福建省',
            '360000' => '江西省',
            '370000' => '山东省',
            '410000' => '河南省',
            '420000' => '湖北省',
            '430000' => '湖南省',
            '440000' => '广东省',
            '450000' => '广西壮族自治区',
            '460000' => '海南省',
            '500000' => '重庆市',
            '510000' => '四川省',
            '520000' => '贵州省',
            '530000' => '云南省',
            '540000' => '西藏自治区',
            '610000' => '陕西省',
            '620000' => '甘肃省',
            '630000' => '青海省',
            '640000' => '宁夏回族自治区',
            '650000' => '新疆维吾尔自治区',
            '710000' => '台湾省',
            '810000' => '香港特别行政区',
            '820000' => '澳门特别行政区',
        ];

        $key = array_rand($data, 1);

        return $format == 'title' ? $data[$key] : intval($key);
    }

    /**
     * 随机城市
     *
     * @param string $format
     *
     * @return integer|string
     */
    public static function city($format = 'title')
    {
        $data = [
            '110100' => '北京市',
            '120100' => '天津市',
            '130100' => '石家庄市',
            '140100' => '太原市',
            '150100' => '呼和浩特市',
            '210100' => '沈阳市',
            '220100' => '长春市',
            '230100' => '哈尔滨市',
            '310100' => '上海市',
            '320100' => '南京市',
            '330100' => '杭州市',
            '340100' => '合肥市',
            '350100' => '福州市',
            '360100' => '南昌市',
            '370100' => '济南市',
            '410100' => '郑州市',
            '420100' => '武汉市',
            '430100' => '长沙市',
            '440100' => '广州市',
            '450100' => '南宁市',
            '460100' => '海口市',
            '500100' => '重庆市',
            '510100' => '成都市',
            '520100' => '贵阳市',
            '530100' => '昆明市',
            '540100' => '拉萨市',
            '610100' => '西安市',
            '620100' => '兰州市',
            '630100' => '青海省',
            '640000' => '西宁市',
            '640100' => '银川市',
            '650100' => '乌鲁木齐市',
        ];

        $key = array_rand($data, 1);

        return $format == 'title' ? $data[$key] : intval($key);
    }

    /**
     * 随机区县
     *
     * @param string $format
     *
     * @return integer|string
     */
    public static function district($format = 'title')
    {
        $data = [
            '110101' => '东城区',
            '120101' => '和平区',
            '130102' => '长安区',
            '130202' => '路南区',
            '140105' => '小店区',
            '150102' => '新城区',
            '210106' => '铁西区',
            '220100' => '长春市',
            '230100' => '哈尔滨市',
            '310100' => '上海市',
            '320100' => '南京市',
            '330100' => '杭州市',
            '340100' => '合肥市',
            '350100' => '福州市',
            '360100' => '南昌市',
            '370100' => '济南市',
            '410100' => '郑州市',
            '420100' => '武汉市',
            '430100' => '长沙市',
            '440100' => '广州市',
            '450100' => '南宁市',
            '460100' => '海口市',
            '500100' => '重庆市',
            '510100' => '成都市',
            '520100' => '贵阳市',
            '530100' => '昆明市',
            '540100' => '拉萨市',
            '610100' => '西安市',
            '620100' => '兰州市',
            '630100' => '青海省',
            '640000' => '西宁市',
            '640100' => '银川市',
            '650100' => '乌鲁木齐市',
        ];

        $key = array_rand($data, 1);

        return $format == 'title' ? $data[$key] : intval($key);
    }

    /**
     * 随机IP(v4)
     *
     * @return string
     */
    public static function ip()
    {
        $ipInt = [
            ['607649792', '608174079'], //36.56.0.0-36.63.255.255
            ['975044608', '977272831'], //58.30.0.0-58.63.255.255
            ['999751680', '999784447'], //59.151.0.0-59.151.127.255
            ['1019346944', '1019478015'], //60.194.0.0-60.195.255.255
            ['1038614528', '1039007743'], //61.232.0.0-61.237.255.255
            ['1783627776', '1784676351'], //106.80.0.0-106.95.255.255
            ['1947009024', '1947074559'], //116.13.0.0-116.13.255.255
            ['1987051520', '1988034559'], //118.112.0.0-118.126.255.255
            ['2035023872', '2035154943'], //121.76.0.0-121.77.255.255
            ['2078801920', '2079064063'], //123.232.0.0-123.235.255.255
            ['-1950089216', '-1948778497'], //139.196.0.0-139.215.255.255
            ['-1425539072', '-1425014785'], //171.8.0.0-171.15.255.255
            ['-1236271104', '-1235419137'], //182.80.0.0-182.92.255.255
            ['-770113536', '-768606209'], //210.25.0.0-210.47.255.255
            ['-569376768', '-564133889'], //222.16.0.0-222.95.255.255
        ];

        $key = mt_rand(0, count($ipInt) - 1);

        return long2ip(mt_rand($ipInt[$key][0], $ipInt[$key][1]));
    }
}
